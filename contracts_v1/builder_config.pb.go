// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contracts.v1/builder_config.proto

package contracts_v1

import (
	fmt "fmt"
	manifest_v1 "github.com/estafette/estafette-ci-protos-golang/manifest_v1"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BuilderConfig struct {
	Action               string                         `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Track                string                         `protobuf:"bytes,2,opt,name=track,proto3" json:"track,omitempty"`
	RegistryMirror       string                         `protobuf:"bytes,3,opt,name=registry_mirror,json=registryMirror,proto3" json:"registry_mirror,omitempty"`
	DockerDaemonMtu      string                         `protobuf:"bytes,4,opt,name=docker_daemon_mtu,json=dockerDaemonMtu,proto3" json:"docker_daemon_mtu,omitempty"`
	Manifest             *manifest_v1.EstafetteManifest `protobuf:"bytes,5,opt,name=manifest,proto3" json:"manifest,omitempty"`
	JobName              string                         `protobuf:"bytes,6,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	ReleaseName          string                         `protobuf:"bytes,7,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Events               []*manifest_v1.EstafetteEvent  `protobuf:"bytes,8,rep,name=events,proto3" json:"events,omitempty"`
	CiServer             *CIServerConfig                `protobuf:"bytes,9,opt,name=ci_server,json=ciServer,proto3" json:"ci_server,omitempty"`
	BuildParams          *BuildParamsConfig             `protobuf:"bytes,10,opt,name=build_params,json=buildParams,proto3" json:"build_params,omitempty"`
	ReleaseParams        *ReleaseParamsConfig           `protobuf:"bytes,11,opt,name=release_params,json=releaseParams,proto3" json:"release_params,omitempty"`
	Git                  *GitConfig                     `protobuf:"bytes,12,opt,name=git,proto3" json:"git,omitempty"`
	BuildVersion         *BuildVersionConfig            `protobuf:"bytes,13,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
	Credentials          []*CredentialConfig            `protobuf:"bytes,14,rep,name=credentials,proto3" json:"credentials,omitempty"`
	TrustedImages        []*TrustedImageConfig          `protobuf:"bytes,15,rep,name=trusted_images,json=trustedImages,proto3" json:"trusted_images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BuilderConfig) Reset()         { *m = BuilderConfig{} }
func (m *BuilderConfig) String() string { return proto.CompactTextString(m) }
func (*BuilderConfig) ProtoMessage()    {}
func (*BuilderConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a60511bb8e66190, []int{0}
}

func (m *BuilderConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuilderConfig.Unmarshal(m, b)
}
func (m *BuilderConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuilderConfig.Marshal(b, m, deterministic)
}
func (m *BuilderConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuilderConfig.Merge(m, src)
}
func (m *BuilderConfig) XXX_Size() int {
	return xxx_messageInfo_BuilderConfig.Size(m)
}
func (m *BuilderConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BuilderConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BuilderConfig proto.InternalMessageInfo

func (m *BuilderConfig) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *BuilderConfig) GetTrack() string {
	if m != nil {
		return m.Track
	}
	return ""
}

func (m *BuilderConfig) GetRegistryMirror() string {
	if m != nil {
		return m.RegistryMirror
	}
	return ""
}

func (m *BuilderConfig) GetDockerDaemonMtu() string {
	if m != nil {
		return m.DockerDaemonMtu
	}
	return ""
}

func (m *BuilderConfig) GetManifest() *manifest_v1.EstafetteManifest {
	if m != nil {
		return m.Manifest
	}
	return nil
}

func (m *BuilderConfig) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *BuilderConfig) GetReleaseName() string {
	if m != nil {
		return m.ReleaseName
	}
	return ""
}

func (m *BuilderConfig) GetEvents() []*manifest_v1.EstafetteEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *BuilderConfig) GetCiServer() *CIServerConfig {
	if m != nil {
		return m.CiServer
	}
	return nil
}

func (m *BuilderConfig) GetBuildParams() *BuildParamsConfig {
	if m != nil {
		return m.BuildParams
	}
	return nil
}

func (m *BuilderConfig) GetReleaseParams() *ReleaseParamsConfig {
	if m != nil {
		return m.ReleaseParams
	}
	return nil
}

func (m *BuilderConfig) GetGit() *GitConfig {
	if m != nil {
		return m.Git
	}
	return nil
}

func (m *BuilderConfig) GetBuildVersion() *BuildVersionConfig {
	if m != nil {
		return m.BuildVersion
	}
	return nil
}

func (m *BuilderConfig) GetCredentials() []*CredentialConfig {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *BuilderConfig) GetTrustedImages() []*TrustedImageConfig {
	if m != nil {
		return m.TrustedImages
	}
	return nil
}

func init() {
	proto.RegisterType((*BuilderConfig)(nil), "contracts.v1.BuilderConfig")
}

func init() { proto.RegisterFile("contracts.v1/builder_config.proto", fileDescriptor_6a60511bb8e66190) }

var fileDescriptor_6a60511bb8e66190 = []byte{
	// 570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0xd5, 0x95, 0x75, 0xad, 0xd3, 0x1f, 0xc2, 0x42, 0xe0, 0x15, 0x18, 0x2d, 0x43, 0xac,
	0x20, 0xd5, 0x53, 0xb7, 0x13, 0x88, 0x03, 0x6a, 0xa9, 0x46, 0x0f, 0x45, 0xa8, 0xa0, 0x1d, 0xb8,
	0x44, 0x4e, 0xea, 0x06, 0x6f, 0x4d, 0x3c, 0xd9, 0x6e, 0x25, 0x4e, 0x1c, 0xf9, 0x5f, 0xf8, 0x2b,
	0x51, 0x9f, 0x93, 0x34, 0x2e, 0x3d, 0xec, 0x16, 0x7f, 0xdf, 0xe7, 0xfb, 0xf2, 0xde, 0xb3, 0x1f,
	0xea, 0x86, 0x32, 0x31, 0x8a, 0x85, 0x46, 0xd3, 0xf5, 0xe0, 0x3c, 0x58, 0x89, 0xe5, 0x9c, 0x2b,
	0x3f, 0x94, 0xc9, 0x42, 0x44, 0xf4, 0x4e, 0x49, 0x23, 0x71, 0xbd, 0x88, 0xb4, 0x5f, 0xff, 0x6f,
	0xf0, 0xef, 0x98, 0x62, 0xb1, 0x76, 0x5c, 0xed, 0xb3, 0x3d, 0xdc, 0x9a, 0x2b, 0x2d, 0x64, 0xe2,
	0x82, 0xa7, 0x0e, 0x18, 0x0a, 0x5f, 0x73, 0xb5, 0xde, 0xa9, 0xa1, 0xfd, 0xca, 0x85, 0x14, 0x9f,
	0xf3, 0xc4, 0x08, 0xb6, 0x74, 0xa9, 0xe7, 0x0e, 0x15, 0x09, 0xe3, 0x86, 0x7b, 0x4e, 0x58, 0xf1,
	0x25, 0x67, 0x9a, 0xdf, 0xa3, 0x78, 0xa3, 0x56, 0xda, 0xf0, 0xb9, 0x2f, 0x62, 0x16, 0x71, 0x17,
	0xec, 0xc6, 0x2c, 0x11, 0x0b, 0xae, 0xcd, 0x86, 0xe3, 0xda, 0xb0, 0x05, 0x37, 0x86, 0xfb, 0x7c,
	0xcd, 0x13, 0x93, 0x95, 0xbe, 0x1f, 0xc9, 0x55, 0xa0, 0x5e, 0xfe, 0xa9, 0xa0, 0xc6, 0xd0, 0x4e,
	0x7f, 0x04, 0x3f, 0xc0, 0x8f, 0x51, 0x85, 0x85, 0x46, 0xc8, 0x84, 0x94, 0x3a, 0xa5, 0x5e, 0x6d,
	0x96, 0x9e, 0xf0, 0x23, 0x74, 0xb8, 0x29, 0xed, 0x96, 0x1c, 0x80, 0x6c, 0x0f, 0xf8, 0x0c, 0xb5,
	0x14, 0x8f, 0x84, 0x36, 0xea, 0x97, 0x1f, 0x0b, 0xa5, 0xa4, 0x22, 0x65, 0x88, 0x37, 0x33, 0x79,
	0x0a, 0x2a, 0x7e, 0x8b, 0x1e, 0xce, 0x65, 0x78, 0xcb, 0x95, 0x3f, 0x67, 0x3c, 0x96, 0x89, 0x1f,
	0x9b, 0x15, 0x79, 0x00, 0x68, 0xcb, 0x06, 0x3e, 0x81, 0x3e, 0x35, 0x2b, 0xfc, 0x1e, 0x55, 0xb3,
	0x32, 0xc9, 0x61, 0xa7, 0xd4, 0xf3, 0x2e, 0x4e, 0x68, 0xa1, 0x1b, 0x3a, 0xce, 0xba, 0x99, 0xa6,
	0xe2, 0x2c, 0xe7, 0xf1, 0x31, 0xaa, 0xde, 0xc8, 0xc0, 0x4f, 0x58, 0xcc, 0x49, 0x05, 0xd2, 0x1f,
	0xdd, 0xc8, 0xe0, 0x0b, 0x8b, 0x39, 0xee, 0xa2, 0x7a, 0x36, 0x7c, 0x08, 0x1f, 0x41, 0xd8, 0x4b,
	0x35, 0x40, 0x2e, 0x51, 0x05, 0x66, 0xa8, 0x49, 0xb5, 0x53, 0xee, 0x79, 0x17, 0x4f, 0xf7, 0xff,
	0x77, 0xbc, 0x61, 0x66, 0x29, 0x8a, 0xdf, 0xa1, 0x5a, 0xfe, 0x7c, 0x48, 0x0d, 0xea, 0x7d, 0x46,
	0x8b, 0x37, 0x49, 0x47, 0x93, 0x6f, 0x10, 0xb5, 0x23, 0x9e, 0x55, 0x43, 0x61, 0xcf, 0x78, 0x88,
	0xea, 0xc5, 0xa7, 0x4c, 0x10, 0xb8, 0x5f, 0xb8, 0x6e, 0xb8, 0x9f, 0xaf, 0x00, 0xa4, 0x09, 0xbc,
	0x60, 0x2b, 0xe1, 0xcf, 0xa8, 0xe9, 0xbe, 0x29, 0xe2, 0x41, 0x96, 0xae, 0x9b, 0x65, 0x66, 0x19,
	0x27, 0x4f, 0x43, 0x15, 0x45, 0xfc, 0x06, 0x95, 0x23, 0x61, 0x48, 0x1d, 0xec, 0x4f, 0x5c, 0xfb,
	0x95, 0x30, 0xa9, 0x69, 0xc3, 0xe0, 0x31, 0x6a, 0x38, 0xbb, 0x45, 0x1a, 0x60, 0xea, 0xec, 0xa9,
	0xfc, 0xda, 0x12, 0xa9, 0xdb, 0xf6, 0x9b, 0x6a, 0xf8, 0x23, 0xf2, 0xb6, 0x4b, 0xa5, 0x49, 0x13,
	0x86, 0x7e, 0xb2, 0x33, 0xbc, 0x1c, 0xc8, 0xba, 0x2f, 0x58, 0xf0, 0x15, 0x6a, 0x3a, 0x7b, 0xa2,
	0x49, 0x0b, 0x92, 0xec, 0x54, 0xf2, 0xdd, 0x32, 0x93, 0x0d, 0x92, 0x35, 0x6f, 0x0a, 0x9a, 0x1e,
	0xfe, 0x46, 0xa7, 0x42, 0xd2, 0x7c, 0x51, 0x68, 0x28, 0xec, 0x8a, 0x68, 0x27, 0xd1, 0x8f, 0x0f,
	0x91, 0x30, 0x3f, 0x57, 0x01, 0x0d, 0x65, 0xbc, 0xdd, 0xaa, 0xed, 0x57, 0x3f, 0x14, 0x7d, 0x6b,
	0xeb, 0x47, 0x72, 0xc9, 0x92, 0xe8, 0x3c, 0x77, 0xfb, 0xeb, 0xc1, 0xdf, 0x83, 0xe3, 0xfc, 0x0d,
	0xd1, 0xd1, 0x84, 0x8e, 0xf2, 0xcc, 0xd7, 0x83, 0xa0, 0x02, 0xbe, 0xcb, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x2d, 0xbf, 0x19, 0x69, 0x1b, 0x05, 0x00, 0x00,
}
